openapi: 3.0.3
info:
  title: BiblioteKA
  version: 1.0.0
  description: API de gerenciamento de biblioteca
paths:
  /api/books/:
    get:
      operationId: api_books_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
    post:
      operationId: api_books_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/:
    get:
      operationId: api_books_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: api_books_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: api_books_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: api_books_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/{id}/copies:
    get:
      operationId: api_books_copies_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCopieList'
          description: ''
    post:
      operationId: api_books_copies_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copie'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copie'
          description: ''
  /api/books/{id}/follow:
    post:
      operationId: api_books_follow_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooksUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BooksUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BooksUser'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksUser'
          description: ''
  /api/books/{id}/like:
    post:
      operationId: api_books_like_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooksLikes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BooksLikes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BooksLikes'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksLikes'
          description: ''
  /api/books/{id}/loans/{loan_id}:
    get:
      operationId: api_books_loans_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: loan_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanList'
          description: ''
    post:
      operationId: api_books_loans_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: loan_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/copies/{id}/:
    get:
      operationId: api_copies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copie'
          description: ''
    put:
      operationId: api_copies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copie'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copie'
          description: ''
    patch:
      operationId: api_copies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCopie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCopie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCopie'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copie'
          description: ''
    delete:
      operationId: api_copies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/refresh/:
    post:
      operationId: api_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/schema:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/:
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/login/:
    post:
      operationId: api_users_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        status:
          type: boolean
        author:
          type: string
          maxLength: 50
        sinopse:
          type: string
        publisher:
          type: string
          maxLength: 150
        quantity:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        users_follow:
          type: string
          readOnly: true
        likes_positive:
          type: string
          readOnly: true
        dislikes:
          type: string
          readOnly: true
      required:
      - author
      - created_at
      - dislikes
      - id
      - likes_positive
      - name
      - publisher
      - quantity
      - sinopse
      - users_follow
    BooksLikes:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
        user_liked:
          type: boolean
          default: false
      required:
      - book
      - id
      - user
    BooksUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
        user_follow:
          type: boolean
          default: true
      required:
      - book
      - id
      - user
    Copie:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_loaned:
          type: boolean
          readOnly: true
          default: false
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
      required:
      - book
      - id
      - is_loaned
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Loan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        create_at:
          type: string
          format: date-time
          readOnly: true
        return_date:
          type: string
          format: date-time
          readOnly: true
        returned_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        copie:
          allOf:
          - $ref: '#/components/schemas/Copie'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - copie
      - create_at
      - id
      - return_date
      - returned_date
      - user
    PaginatedBookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedCopieList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Copie'
    PaginatedLoanList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        status:
          type: boolean
        author:
          type: string
          maxLength: 50
        sinopse:
          type: string
        publisher:
          type: string
          maxLength: 150
        quantity:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        users_follow:
          type: string
          readOnly: true
        likes_positive:
          type: string
          readOnly: true
        dislikes:
          type: string
          readOnly: true
    PatchedCopie:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_loaned:
          type: boolean
          readOnly: true
          default: false
        book:
          allOf:
          - $ref: '#/components/schemas/Book'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_loan_blocked:
          type: boolean
          readOnly: true
        is_superuser:
          type: boolean
          default: false
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        books_liked:
          type: string
          readOnly: true
        books_follow:
          type: string
          readOnly: true
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_loan_blocked:
          type: boolean
          readOnly: true
        is_superuser:
          type: boolean
          default: false
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        books_liked:
          type: string
          readOnly: true
        books_follow:
          type: string
          readOnly: true
      required:
      - books_follow
      - books_liked
      - email
      - id
      - is_loan_blocked
      - name
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
